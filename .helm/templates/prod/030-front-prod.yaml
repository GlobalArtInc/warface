{{ if  (eq .Values.werf.env "prod") }}
apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-front-nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes 2;
    error_log /dev/stderr;
    events {
      worker_connections 1024;
    }
    http {
      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      include /etc/nginx/mime.types;
      default_type application/octet-stream;
      set_real_ip_from  10.0.0.0/8;
      set_real_ip_from  172.0.0.0/8;
      set_real_ip_from  192.168.0.0/16;
      real_ip_header X-Real-IP;
      real_ip_recursive on;
      log_format combined_plus escape=json '{"time_local": "$time_local", '
                                          '"remote_addr": "$remote_addr", '
                                          '"remote_user": "$remote_user", '
                                          '"request": "$request", '
                                          '"status": "$status", '
                                          '"body_bytes_sent": "$body_bytes_sent", '
                                          '"request_time": "$request_time", '
                                          '"http_referrer": "$http_referer", '
                                          '"http_user_agent": "$http_user_agent"}';
      server {
        listen 80;
        charset utf-8;
        root /usr/share/nginx/html;
        index index.html;
        access_log /dev/stdout combined_plus;
        location / {
          try_files $uri $uri/ /index.html;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-front-prod
  labels:
    app: {{ .Chart.Name }}-front-prod
spec:
  replicas: 1
  selector:
      matchLabels:
        app: {{ .Chart.Name }}-front-prod
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-front-prod
    spec:
      imagePullSecrets:
        - name: regcred
      containers:
      - name: {{ .Chart.Name }}-front-prod
        image: '{{ index .Values.werf.image "wfs-front" }}'
        volumeMounts:
        - name: config-files
          subPath: nginx.conf
          mountPath: /etc/nginx/nginx.conf
      volumes:
      - name: config-files
        configMap:
          name: {{ .Chart.Name }}-front-nginx-conf
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}-front
  labels:
    app: {{ .Chart.Name }}-front
spec:
  clusterIP: None
  selector:
    app: {{ .Chart.Name }}-front-prod
  ports:
  - name: {{ .Chart.Name }}-front-prod
    port: 80
    protocol: TCP
{{ end }}
