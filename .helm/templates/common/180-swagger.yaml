apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Chart.Name }}-swagger-nginx-conf
data:
  nginx.conf: |
    user nginx;
    worker_processes 2;

    error_log /dev/stderr;

    events {
      worker_connections 1024;
    }

    http {
      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;
      keepalive_timeout 65;
      index index.html

      include /etc/nginx/mime.types;
      default_type application/octet-stream;

      set_real_ip_from  10.0.0.0/8;
      set_real_ip_from  172.0.0.0/8;
      set_real_ip_from  192.168.0.0/16;

      real_ip_header X-Real-IP;
      real_ip_recursive on;

      log_format combined_plus escape=json '{"time_local": "$time_local", '
                                          '"remote_addr": "$remote_addr", '
                                          '"remote_user": "$remote_user", '
                                          '"request": "$request", '
                                          '"status": "$status", '
                                          '"body_bytes_sent": "$body_bytes_sent", '
                                          '"request_time": "$request_time", '
                                          '"http_referrer": "$http_referer", '
                                          '"http_user_agent": "$http_user_agent"}';

      server {
        listen 80;
        charset utf-8;
        root /swagger;
        access_log /dev/stdout combined_plus;

        location /swagger {
          rewrite ^/swagger(.*)$ $1 break;
          proxy_pass         http://localhost:8080/;
          proxy_http_version 1.1;
          proxy_set_header   Upgrade $http_upgrade;
          proxy_set_header   Connection keep-alive;
          proxy_set_header   Host $host;
          proxy_set_header   X-Forwarded-Host localhost;
          proxy_set_header   X-Forwarded-Proto http;
          proxy_cache_bypass $http_upgrade;
          proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
          proxy_set_header   X-Forwarded-Proto $scheme;
        }
      }
    }
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Chart.Name }}-swagger
  labels:
    app: {{ .Chart.Name }}-swagger
spec:
  replicas: 1
  selector:
      matchLabels:
        app: {{ .Chart.Name }}-swagger
  template:
    metadata:
      labels:
        app: {{ .Chart.Name }}-swagger
    spec:
      containers:
      - name: {{ .Chart.Name }}-swagger
        image: swaggerapi/swagger-ui
        ports:
          - containerPort: 8080
        env:
          - name: URLS
            value: "[{
              \"url\":\"/api/docs-json\",
              \"name\":\"api\"}, {
              \"url\":\"/api/cron/docs-json\",
              \"name\":\"cron\"
            }]"
      - name: nginx
        image: nginx
        volumeMounts:
        - name: config-files
          subPath: nginx.conf
          mountPath: /etc/nginx/nginx.conf
      volumes:
      - name: config-files
        configMap:
          name: {{ .Chart.Name }}-swagger-nginx-conf
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Chart.Name }}-swagger
  labels:
    app: {{ .Chart.Name }}-swagger
spec:
  clusterIP: None
  selector:
    app: {{ .Chart.Name }}-swagger
  ports:
  - name: {{ .Chart.Name }}-swagger
    port: 80
    protocol: TCP
